<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4374" started-at="2011-06-22T02:02:15Z" finished-at="2011-06-22T02:02:19Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4374" started-at="2011-06-22T02:02:15Z" finished-at="2011-06-22T02:02:19Z">
      <class name="serviceimpls.EmployeeServiceImplTestCase">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1489" started-at="2011-06-22T02:02:15Z" finished-at="2011-06-22T02:02:16Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2011-06-22T02:02:16Z" finished-at="2011-06-22T02:02:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanCountAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="254" started-at="2011-06-22T02:02:16Z" finished-at="2011-06-22T02:02:17Z">
        </test-method>
        <test-method status="PASS" signature="testCanCountAll()" name="testCanCountAll" duration-ms="274" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanCountAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="107" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanDeleteAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCanDeleteAll()" name="testCanDeleteAll" duration-ms="319" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanDeleteAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanFind()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="107" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:17Z">
        </test-method>
        <test-method status="PASS" signature="testCanFind()" name="testCanFind" duration-ms="110" started-at="2011-06-22T02:02:17Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="104" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanFindAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanFind()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCanFindAll()" name="testCanFindAll" duration-ms="211" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="154" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanFindAll()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanInsert()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCanInsert()" name="testCanInsert" duration-ms="105" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanInsert()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="159" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanRemoveById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCanRemoveById()" name="testCanRemoveById" duration-ms="210" started-at="2011-06-22T02:02:18Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanRemoveById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="133" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanUpdate()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCanUpdate()" name="testCanUpdate" duration-ms="239" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="120" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testCanUpdate()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testEmployeeServiceIsNotNull()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testEmployeeServiceIsNotNull()" name="testEmployeeServiceIsNotNull" duration-ms="1" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="136" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testTheLies()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testEmployeeServiceIsNotNull()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="testTheLies()" name="testTheLies" duration-ms="1" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<true> but was:<false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<true> but was:<false>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertTrue(Assert.java:37)
	at org.testng.Assert.assertTrue(Assert.java:47)
	at serviceimpls.EmployeeServiceImplTestCase.testTheLies(EmployeeServiceImplTestCase.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:178)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:191)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:666)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1147)
	at org.testng.TestRunner.privateRun(TestRunner.java:749)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:317)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)
	at org.testng.SuiteRunner.run(SuiteRunner.java:223)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1049)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:974)
	at org.testng.TestNG.run(TestNG.java:905)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:203)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:174)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testTheLies()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testTheTruth()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="beforeEachTest()" name="beforeEachTest" is-config="true" duration-ms="114" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="testTheTruth()" name="testTheTruth" duration-ms="2" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2011-06-22T02:02:19Z" finished-at="2011-06-22T02:02:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void serviceimpls.EmployeeServiceImplTestCase.testTheTruth()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
